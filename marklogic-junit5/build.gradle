plugins {
  id "net.saliman.properties" version "1.5.2"
}

dependencies {
  api project(":marklogic-unit-test-client")
  api "com.marklogic:ml-javaclient-util:6.1.0"
  api "org.jdom:jdom2:2.0.6.1"
  api "org.junit.jupiter:junit-jupiter:${junitVersion}"
  api "org.springframework:spring-context:${springVersion}"
  api "org.springframework:spring-test:${springVersion}"
  api "com.fasterxml.jackson.core:jackson-databind:2.20.0"
  api 'org.slf4j:slf4j-api:2.0.17'
  implementation "jaxen:jaxen:2.0.0"
}

test {
  if(project.hasProperty("mlPassword")) {
    systemProperties = System.properties + [
      'mlPassword': "${mlPassword}"
    ]
  }
  if(project.hasProperty("mlUsername")) {
    systemProperties = System.properties + [
      'mlUsername': "${mlUsername}"
    ]
  }
  useJUnitPlatform()
}

// Publishing setup - see https://docs.gradle.org/current/userguide/publishing_setup.html .
java {
  withJavadocJar()
  withSourcesJar()
}

publishing {
  publications {
    mainJava(MavenPublication) {
      groupId = group
      version = version
      from components.java
      pom {
        name = "${group}:${project.name}"
        description = "Supports testing MarkLogic applications"
        packaging = "jar"
        url = "https://github.com/marklogic-community/${project.name}"
        licenses {
          license {
            name = "The Apache License, Version 2.0"
            url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
          }
        }
        developers {
          developer {
            id = "marklogic"
            name = "MarkLogic Github Contributors"
            email = "general@developer.marklogic.com"
            organization = "MarkLogic"
            organizationUrl = "https://www.marklogic.com"
          }
        }
        scm {
          url = "git@github.com:marklogic-community/${project.name}.git"
          connection = "scm:git@github.com:marklogic-community/${project.name}.git"
          developerConnection = "scm:git@github.com:marklogic-community/${project.name}.git"
        }
      }
    }
  }
  repositories {
    maven {
      if (project.hasProperty("mavenUser")) {
        credentials {
          username = mavenUser
          password = mavenPassword
        }
        url publishUrl
        allowInsecureProtocol = true
      } else {
        name = "central"
        url = mavenCentralUrl
        credentials {
          username = mavenCentralUsername
          password = mavenCentralPassword
        }
      }
    }
  }
}

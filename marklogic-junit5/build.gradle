plugins {
	id "java-library"
	id "maven-publish"
	id "com.jfrog.bintray" version "1.8.4"
	id "com.github.jk1.dependency-license-report" version "1.3"
	id "net.saliman.properties" version "1.5.1"
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

repositories {
	jcenter()
}

dependencies {
  api project(":marklogic-unit-test-client")
	api "com.marklogic:ml-javaclient-util:4.1.1"
	api "jaxen:jaxen:1.1.6"
	api "org.junit.jupiter:junit-jupiter-api:5.7.1"
	api "org.junit.jupiter:junit-jupiter-params:5.7.1"
	api "org.springframework:spring-context:5.2.9.RELEASE"
	api "org.springframework:spring-test:5.2.9.RELEASE"
	api "com.fasterxml.jackson.core:jackson-databind:2.11.1"
	api "org.slf4j:slf4j-api:1.7.30"

	// Needed by Gradle 4.6+ - see https://www.petrikainulainen.net/programming/testing/junit-5-tutorial-running-unit-tests-with-gradle/
	testRuntime "org.junit.jupiter:junit-jupiter-engine:5.7.1"

	// Forcing Spring to use logback instead of commons-logging
	testRuntime "ch.qos.logback:logback-classic:1.2.3"
	testRuntime group: "org.slf4j", name: "jcl-over-slf4j", version: "1.7.30"
	testRuntime group: "org.slf4j", name: "slf4j-api", version: "1.7.30"
}

// Needed by Gradle 4.6+ - see https://www.petrikainulainen.net/programming/testing/junit-5-tutorial-running-unit-tests-with-gradle/
test {
	useJUnitPlatform()
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier "sources"
	from sourceSets.main.allJava
}

publishing {
	publications {
		mainJava(MavenPublication) {
			from components.java
      artifactId project.name
		}
		sourcesJava(MavenPublication) {
			from components.java
      artifactId project.name
			artifact sourcesJar
		}
	}
}

if (project.hasProperty("myBintrayUser")) {
	bintray {
		user = myBintrayUser
		key = myBintrayKey
		publications = ["mainJava", "sourcesJava"]
		pkg {
			repo = "Maven"
			name = project.name
      userOrg = 'marklogic-community'
			licenses = ["Apache-2.0"]
			vcsUrl = "https://github.com/marklogic-community/marklogic-unit-test.git"
			version {
				name = project.version
				released = new Date()
			}
		}
	}
}
